---
- hosts: '{{ target }}'
  gather_facts: "no"
  become: true
  tasks:

    - name: Creates cni folder
      file:
        path:  /etc/cni/net.d/
        state: directory

    - name: Creates cni folder
      file:
        path: /opt/cni/bin/
        state: directory

    - name: configure typha service account
      command:
        cmd:  kubectl create serviceaccount -n kube-system calico-typha
        creates: /tmp/typhainstalled

    - name: create role base file
      copy:
        content: |
          kind: ClusterRole
          apiVersion: rbac.authorization.k8s.io/v1beta1
          metadata:
            name: calico-typha
          rules:
            - apiGroups: [""]
              resources:
                - pods
                - namespaces
                - serviceaccounts
                - services
                - nodes
                - endpoints
                - configmap
                - nodes/proxy
              verbs:
            # Used to discover service IPs for advertisement.
                - list
                - watch
                - get
            - apiGroups: ["networking.k8s.io"]
              resources:
                - networkpolicies
              verbs:
                - list
                - get
                - watch
            - apiGroups: ["crd.projectcalico.org"]
              resources:
                - globalfelixconfigs
                - felixconfigurations
                - bgppeers
                - globalbgpconfigs
                - bgpconfigurations
                - ippools
                - ipamblocks
                - globalnetworkpolicies
                - globalnetworksets
                - networkpolicies
                - clusterinformations
                - hostendpoints
                - blockaffinities
                - networksets
                - ipamconfigs
              verbs:
                - get
                - list
                - watch
            - apiGroups: ["crd.projectcalico.org"]
              resources:
                - clusterinformations
                - ipamconfigs
              verbs:
                - get
                - create
                - update
        dest: /tmp/roleaccount
        force: no
        group: root
        owner: root
        mode: 0555

    - name: Deploy the typha
      command:
        cmd:  kubectl apply -f /tmp/roleaccount

    - name: create deploymnet
      copy:
        content: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: calico-typha
            namespace: kube-system
            labels:
              k8s-app: calico-typha
          spec:
            replicas: 3
            replicas: 3
            revisionHistoryLimit: 2
            selector:
              matchLabels:
                k8s-app: calico-typha
            template:
              metadata:
                labels:
                  k8s-app: calico-typha
                annotations:
                  cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
              spec:
                hostNetwork: true
                tolerations:
                  # Mark the pod as a critical add-on for rescheduling.
                  - key: CriticalAddonsOnly
                    operator: Exists
                serviceAccountName: calico-typha
                priorityClassName: system-cluster-critical
                containers:
                - image: calico/typha:v3.8.0
                  name: calico-typha
                  ports:
                  - containerPort: 5473
                    name: calico-typha
                    protocol: TCP
                  env:
                    # Disable logging to file and syslog since those don't make sense in Kubernetes.
                    - name: TYPHA_LOGFILEPATH
                      value: "none"
                    - name: TYPHA_LOGSEVERITYSYS
                      value: "none"
                    # Monitor the Kubernetes API to find the number of running instances and rebalance
                    # connections.
                    - name: TYPHA_CONNECTIONREBALANCINGMODE
                      value: "kubernetes"
                    - name: TYPHA_DATASTORETYPE
                      value: "kubernetes"
                    - name: TYPHA_HEALTHENABLED
                      value: "true"
                    # Location of the CA bundle Typha uses to authenticate calico/node; volume mount
                    - name: TYPHA_CAFILE
                      value: /etc/kubernetes/pki/typhaca.crt
                    # Common name on the calico/node certificate
                    - name: TYPHA_CLIENTCN
                      value: calico-node
                    # Location of the server certificate for Typha; volume mount
                    - name: TYPHA_SERVERCERTFILE
                      value: /etc/kubernetes/pki/typha.crt
                    # Location of the server certificate key for Typha; volume mount
                    - name: TYPHA_SERVERKEYFILE
                      value: /etc/kubernetes/pki/typha.key
                  livenessProbe:
                    httpGet:
                      path: /liveness
                      port: 9098
                      host: localhost
                    periodSeconds: 30
                    initialDelaySeconds: 30
                  readinessProbe:
                    httpGet:
                      path: /readiness
                      port: 9098
                      host: localhost
                    periodSeconds: 10
                    - name: certs
                      mountPath: "/etc/kubernetes/pki/"
                      readOnly: true
                  volumeMounts:
                    - name: adminconf
                      mountPath: "/etc/kubernetes/admin.conf"
                      readOnly: true

                volumes:
                  - name: certs
                    configMap:
                      name: certs
                  - name: adminconf
                    configMap:
                      name: adminconf

        dest: /tmp/deployaccount
        force: no
        group: root
        owner: root
        mode: 0555

    - name: save state file
      copy:
        content: ""
        dest: /tmp/typhainstalled
        force: no
        group: root
        owner: root
    - name: configure configmap
      command:
        cmd: kubectl create configmap certs --from-file=/etc/kubernetes/pki/  -n kube-system
        creates: /tmp/deployinstalled

    - name: configure configmap
      command:
        cmd: kubectl create configmap adminconf --from-file=/etc/kubernetes/admin.conf -n kube-system

        creates: /tmp/deployinstalled

    - name: configure typha service account
      command:
        cmd:  kubectl create clusterrolebinding calico-typha --clusterrole=calico-typha --serviceaccount=kube-system:calico-typha
        creates: /tmp/deployinstalled

    - name: Deploy the typha
      command:
        cmd:  kubectl apply -f /tmp/deployaccount
        creates: /tmp/deployinstalled

    - name: create deployment of calicnode
      copy:
        content: |
          apiVersion: v1
          kind: Service
          metadata:
            name: calico-typha
            namespace: kube-system
            labels:
              k8s-app: calico-typha
          spec:
            ports:
              - port: 5473
                protocol: TCP
                targetPort: calico-typha
                name: calico-typha
            selector:
              k8s-app: calico-typha
        dest: /tmp/deploycaliconodetypha
        force: no
        group: root
        owner: root
        mode: 0555

    - name: Deploy the typha
      command:
        cmd:  kubectl apply -f  /tmp/deploycaliconodetypha
        creates: /tmp/deployinstalled

    - name: save state file
      copy:
        content: ""
        dest: /tmp/deployinstalled
        force: no
        group: root
        owner: root
        mode: 0555