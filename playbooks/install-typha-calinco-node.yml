---
- hosts: '{{ target }}'
  gather_facts: "no"
  become: true
  tasks:

    - name: Creates cni folder
      file:
        path:  /etc/cni/net.d/
        state: directory

    - name: Creates cni folder
      file:
        path: /opt/cni/bin/
        state: directory

    - name: Creates ssl folders
      file:
        path: /etc/ssl/csr/
        state: directory

    - name: Creates ssl folders
      file:
        path: /etc/ssl/private/
        state: directory

    - name: Creates SSL certficates process
      command:
        cmd: openssl req -x509 -newkey rsa:4096 -keyout /etc/ssl/private/typhaca.key -nodes -out /etc/kubernetes/pki/typhaca.crt -subj "/CN=Calico Typha CA" -days 365
        creates: /tmp/typhainstalled

    - name: Configure typha for ssl
      command:
        cmd:  sudo sh -c "kubectl create configmap -n kube-system calico-typha-ca --from-file=/etc/kubernetes/pki/typhaca.crt"
        creates: /tmp/typhainstalled

    - name: Creates SSL certficates process
      command:
        cmd: openssl req -newkey rsa:4096 -keyout /etc/ssl/private/typha.key -nodes -out /etc/ssl/csr/typha.csr -subj "/CN=calico-typha"
        creates: /tmp/typhainstalled

    - name: Configure typha ssl
      command:
        cmd: openssl x509 -req -in /etc/ssl/csr/typha.csr -CA /etc/kubernetes/pki/typhaca.crt -CAkey /etc/ssl/private/typhaca.key -CAcreateserial -out /etc/kubernetes/pki/typha.crt -days 365
        creates: /tmp/typhainstalled

    - name: Configure typha secret
      command:
        cmd:  kubectl create secret generic -n kube-system calico-typha-certs --from-file=/etc/ssl/private/typha.key --from-file=/etc/kubernetes/pki/typha.crt
        creates: /tmp/typhainstalled

    - name: configure typha service account
      command:
        cmd:  kubectl create serviceaccount -n kube-system calico-typha
        creates: /tmp/typhainstalled

    - name: create role base file
      copy:
        content: |
          kind: ClusterRole
          apiVersion: rbac.authorization.k8s.io/v1beta1
          metadata:
            name: calico-typha
          rules:
            - apiGroups: [""]
              resources:
                - pods
                - namespaces
                - serviceaccounts
                - endpoints
                - services
                - nodes
              verbs:
            # Used to discover service IPs for advertisement.
                - watch
                - list
            - apiGroups: ["networking.k8s.io"]
              resources:
                - networkpolicies
              verbs:
                - watch
                - list
            - apiGroups: ["crd.projectcalico.org"]
              resources:
                - globalfelixconfigs
                - felixconfigurations
                - bgppeers
                - globalbgpconfigs
                - bgpconfigurations
                - ippools
                - ipamblocks
                - globalnetworkpolicies
                - globalnetworksets
                - networkpolicies
                - clusterinformations
                - hostendpoints
                - blockaffinities
                - networksets
              verbs:
                - get
                - list
                - watch
            - apiGroups: ["crd.projectcalico.org"]
              resources:
                - clusterinformations
              verbs:
                - get
                - create
                - update
        dest: /tmp/roleaccount
        force: no
        group: root
        owner: root
        mode: 0555

    - name: create deploymnet
      copy:
        content: |
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: calico-typha
            namespace: kube-system
          labels:
            k8s-app: calico-typha
          spec:
            replicas: 3
            revisionHistoryLimit: 2
            selector:
            matchLabels:
              k8s-app: calico-typha
          template:
            metadata:
              labels:
                k8s-app: calico-typha
              annotations:
                cluster-autoscaler.kubernetes.io/safe-to-evict: 'true'
          spec:
            hostNetwork: true
            tolerations:
              # Mark the pod as a critical add-on for rescheduling.
              - key: CriticalAddonsOnly
                operator: Exists
            serviceAccountName: calico-typha
            priorityClassName: system-cluster-critical
            containers:
            - image: calico/typha:v3.8.0
              name: calico-typha
              ports:
                - containerPort: 5473
                    name: calico-typha
                    protocol: TCP
              env:
                # Disable logging to file and syslog since those don't make sense in Kubernetes.
                - name: TYPHA_LOGFILEPATH
                  value: "none"
                - name: TYPHA_LOGSEVERITYSYS
                  value: "none"
                # Monitor the Kubernetes API to find the number of running instances and rebalance
                # connections.
                - name: TYPHA_CONNECTIONREBALANCINGMODE
                  value: "kubernetes"
                - name: TYPHA_DATASTORETYPE
                  value: "kubernetes"
                - name: TYPHA_HEALTHENABLED
                  value: "true"
                # Location of the CA bundle Typha uses to authenticate calico/node; volume mount
                - name: TYPHA_CAFILE
                  value: /etc/kubernetes/pki/typhaca.crt
                # Common name on the calico/node certificate
                - name: TYPHA_CLIENTCN
                  value: calico-node
                # Location of the server certificate for Typha; volume mount
                - name: TYPHA_SERVERCERTFILE
                  value: /etc/kubernetes/pki/typha.crt
                # Location of the server certificate key for Typha; volume mount
                - name: TYPHA_SERVERKEYFILE
                  value: /etc/ssl/private/typha.key
              livenessProbe:
                httpGet:
                  path: /liveness
                  port: 9098
                  host: localhost
                periodSeconds: 30
                initialDelaySeconds: 30
              readinessProbe:
                httpGet:
                  path: /readiness
                  port: 9098
                  host: localhost
                periodSeconds: 10
              volumeMounts:
                - name: calico-typha-ca
                  mountPath: "/calico-typha-ca"
                  readOnly: true
                - name: calico-typha-certs
                  mountPath: "/calico-typha-certs"
                  readOnly: true
            volumes:
              - name: calico-typha-ca
                configMap:
                  name: calico-typha-ca
              - name: calico-typha-certs
                secret:
                  secretName: calico-typha-certs
        dest: /tmp/deployaccount
        force: no
        group: root
        owner: root
        mode: 0555

    - name: configure typha service account
      command:
        cmd:  kubectl create clusterrolebinding calico-typha --clusterrole=calico-typha --serviceaccount=kube-system:calico-typha
        creates: /tmp/typhainstalled

    - name: configure typha service account
      command:
        cmd:  kubectl apply -f /tmp/deployaccount
        creates: /tmp/typhainstalled

