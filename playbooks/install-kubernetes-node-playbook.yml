---
- hosts: '{{ target }}'
  gather_facts: "no"
  become: true

  tasks:
    - name: Install required system packages
      yum:
        name:
          - docker 
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
        state: removed
    - name: Install required system packages
      yum:
        name:
          - yum-utils
          - python3
          - python3-pip
        state: installed

    - name: Add repository
      yum_repository:
        name: epel
        description: EPEL YUM repo
        baseurl:  https://download.docker.com/linux/centos/docker-ce.repo

    - name: Add repository
      yum_repository:
        name: epel
        description: EPEL YUM repo
        baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64

    - name: Install required system packages
      yum:
        name:
          - docker-ce
          - docker-ce-cli 
          - containerd.io
          - kubelet
          - kubeadm
          - kubectl
        state: installed

    -  name: Install Docker Module for Python
       pip:
         name: docker
       environment:
         http_proxy: '{{ http_ansible_proxy }}'
         https_proxy: '{{ http_ansible_proxy }}'

    - name: Install AWS CLI
      pip:
        name: awscli
      environment:
        http_proxy: '{{ http_ansible_proxy }}'
        https_proxy: '{{ http_ansible_proxy }}'

    - name: Configure containerd
      command: sudo containerd config default > /etc/containerd/config.toml

    - name: Setup kubernetes hosts file
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ kuburnetes_master }}$'
        line: "{{ kuburnetes_master }} node-master"

    - name: Ansible replace string example
      replace:
        destfile: /lib/systemd/system/docker.service
        regexp: ^ExecStart.*
        replace: 'ExecStart=/usr/bin/dockerd --exec-opt native.cgroupdriver=systemd -H fd:// --containerd=/run/containerd/containerd.sock'

    - name: Ensure the default Apache port is 8080
      lineinfile:
        path: /lib/systemd/system/docker.service
        insertafter: '^[Service]'
        line: |
          Environment="HTTP_PROXY={{ http_ansible_proxy }}"
          Environment="HTTPS_PROXY={{ http_ansible_proxy }}"
          Environment="NO_PROXY=localhost,127.0.0.1"

    - name: Creating a file with content
      copy:
        dest: "/etc/systemd/system/rc-local.service"
        content: |
          [Service]
          Type=forking
          ExecStart=/etc/rc.local
          TimeoutSec=0
          StandardOutput=tty
          RemainAfterExit=yes
          SysVStartPriority=99
          [Install]
          WantedBy=multi-user.target

    - name: Just force systemd to reread configs (2.4 and above)
      systemd:
        daemon_reload: yes

    - name: Restart docker
      systemd:
        state: restarted
        daemon_reload: yes
        name: docker

    - name: Restart containerd
      systemd:
        state: restarted
        daemon_reload: yes
        name: containerd

    - name: Enable service kubelet and ensure it is not masked
      systemd:
        name: kubelet
        enabled: yes
        masked: no

    - name: Make sure a service is running
      systemd:
        name: kubelet
        state: restarted

    - name: change permissions for run_to_connect
      file:
        path: /home/ec2-user/run_to_connect_node.sh
        state: touch
        mode: "u+rwx,g+rx,o+rx"

    - name: Initialize the Kubernetes cluster using kubeadm
      command:
        cmd:  sh -c "sudo /home/ec2-user/run_to_connect_node.sh"
        creates: /etc/rc.local


    - name: backup the manifests folder
      copy:
        src: /etc/kubernetes/manifests/
        dest: /tmp/manifests
        remote_src: yes
        directory_mode: yes

    - name: synchroize master folder to node /etc/kubernetes
      synchronize:
        src: "{{ workspace }}/etc/kubernetes/"
        dest: /etc/kubernetes/
        checksum: yes
        recursive: yes

    - name: remove manifest folder
      file:
        path: /etc/kubernetes/manifests/
        state: absent

    - name: restore the manifests folder
      copy:
        src:  /tmp/manifests/
        dest: /etc/kubernetes/manifests/
        remote_src: yes
        directory_mode: yes

    - name: Creating a file with content
      copy:
        dest: "/etc/rc.local"
        content: |
          #!/bin/sh -e
          KUBECONFIG=/etc/kubernetes/admin.conf kubectl proxy --port=8080 &
          exit 0
        mode: 0755

    - name: Enable service rc-local and ensure it is not masked
      systemd:
        name: rc-local
        enabled: yes
        masked: no

    - name: Make sure a service is running
      systemd:
        state: started
        name: rc-local
